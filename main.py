from api_handler import generate_with_gemini
from instagram_bot import post_album_to_instagram
from name_info import get_todays_names, get_name_info
from image_generator import generate_image_for
import os
from datetime import datetime, timedelta


def delete_old_png_files():
    """
    Sma≈æe PNG soubory star≈°√≠ ne≈æ 7 dn√≠ ve form√°tu YYYY-MM-DD*.png
    - Proch√°z√≠ adres√°≈ô 'output/obrazky'
    - Hled√° soubory odpov√≠daj√≠c√≠ vzoru data
    - Ma≈æe ty, kter√© jsou star≈°√≠ ne≈æ 7 dn√≠
    """
    # Cesta k adres√°≈ôi s obr√°zky
    image_dir = 'output'

    print(f"üîç [main_delete_old_png_files] Prohled√°v√°m adres√°≈ô: {image_dir}")

    # Vypoƒç√≠t√° datum p≈ôed 7 dny (hranice pro maz√°n√≠)
    seven_days_ago = datetime.now() - timedelta(days=7)
    print(f"‚è≥ [main_delete_old_png_files] Mazac√≠ hranice: soubory star≈°√≠ ne≈æ {seven_days_ago.date()}")

    # Kontrola existence adres√°≈ôe
    if not os.path.exists(image_dir):
        print(f"‚ö†Ô∏è [main_delete_old_png_files] Adres√°≈ô nenalezen! Ukonƒçuji funkci.")
        return

    file_count = 0
    deleted_count = 0

    # Proch√°z√≠ v≈°echny soubory v adres√°≈ôi
    for filename in os.listdir(image_dir):
        file_path = os.path.join(image_dir, filename)

        # P≈ôeskoƒç√≠ podadres√°≈ôe
        if os.path.isdir(file_path):
            print(f"üìÇ [main_delete_old_png_files] P≈ôeskoƒçen podadres√°≈ô: {filename}")
            continue

        file_count += 1

        # Zpracov√°v√° pouze PNG soubory
        if filename.lower().endswith('.png'):
            print(f"üñºÔ∏è [main_delete_old_png_files] Zpracov√°v√°m soubor: {filename}")

            try:
                # Pokus√≠ se z√≠skat datum z n√°zvu souboru (form√°t YYYY-MM-DD)
                date_str = filename[:10]  # Prvn√≠ch 10 znak≈Ø by mƒõlo b√Ωt datum

                file_date = datetime.strptime(date_str, "%Y-%m-%d").date()

                # Porovn√°n√≠ data - pokud je soubor star≈°√≠ ne≈æ 7 dn√≠, sma≈æe ho
                if file_date < seven_days_ago.date():
                    os.remove(file_path)
                    deleted_count += 1
                    print(f"üóëÔ∏è [main_delete_old_png_files] SMAZ√ÅNO: {filename} (datum: {file_date})")
                else:
                    print(f"üëç [main_delete_old_png_files] Zachov√°v√°m (je aktu√°ln√≠): {filename}")

            except ValueError:
                # P≈ôeskoƒç√≠ soubory, kter√© neodpov√≠daj√≠ form√°tu data
                print(f"‚ùì [main_delete_old_png_files] P≈ôeskoƒçeno - neplatn√Ω form√°t data: {filename}")
                continue
        else:
            print(f"‚è≠Ô∏è [main_delete_old_png_files] P≈ôeskoƒçeno - nen√≠ PNG: {filename}")

    # V√Ωpis statistik po dokonƒçen√≠
    print(f"üìä [main_delete_old_png_files] CELKEM: {file_count} soubor≈Ø prohled√°no")
    print(f"üìä [main_delete_old_png_files] SMAZ√ÅNO: {deleted_count} soubor≈Ø")
    print(f"üèÅ [main_delete_old_png_files] √öklid dokonƒçen!")

def main():
    """
    1) Naƒçte dne≈°n√≠ sv√°teƒçn√≠ jm√©na.
    2) Pro ka≈æd√© jm√©no z√≠sk√° informace a vygeneruje obr√°zek.
    3) Nahraje v≈°echny obr√°zky jako album na Instagram s popiskem.
    """
    print("üçÄ Naƒç√≠t√°m dne≈°n√≠ sv√°teƒçn√≠ jm√©na...")
    names = get_todays_names()
    if not names:
        print("‚ÑπÔ∏è ≈Ω√°dn√© sv√°teƒçn√≠ jm√©no pro dne≈°ek. Ukonƒçuji.")
        return

    image_paths = []
    for name in names:
        print(f"üîÑ [main] Generuji obr√°zek pro: {name}")
        info = get_name_info(name)
        img_path = generate_image_for(name, info)
        image_paths.append(img_path)

    print("üîÑ [main] Generuji AI popis pro Instagram...")
    info = get_name_info(names[0])
    prompt = (
        f"Napi≈° kreativn√≠, vtipn√Ω a energick√Ω popisek na Instagram v ƒçe≈°tinƒõ, kter√Ω oslavuje sv√°tek tƒõchto jmen: {names}. "
        f"POZOR ‚Äì pokud je jm√©no jen jedno, pi≈° v√Ωhradnƒõ v jednotn√©m ƒç√≠sle ('Oslava sv√°tku pro Kvƒõtoslava je tady!'), "
        f"pokud je jmen v√≠c, pi≈° v mno≈æn√©m ƒç√≠sle ('Oslava sv√°tku pro Alexeje a Kvƒõtoslava je tady!'). "
        f"Jm√©na spoj spr√°vnƒõ ve 2. p√°dƒõ, nesm√≠ se opakovat ani b√Ωt v nominativu. "
        f"Zaƒçni hlavn√≠ vƒõtou stylu: üéâ Oslava sv√°tku pro Alexeje a Alexe je tady! üéâ ‚Äì nebo podobnƒõ v√Ωraznou oslavnou vƒõtou s emojis. "
        f"Na druh√Ω ≈ô√°dek napi≈° odlehƒçen√© a z√°bavn√© p≈ô√°n√≠ tƒõmto jm√©n≈Øm ‚Äì mluv ke jm√©n≈Øm jako k osobnostem, ne k lidem. "
        f"Na t≈ôet√≠ ≈ô√°dek nenucenƒõ zakomponuj p≈Øvod jm√©na, pou≈æij hodnotu {info['origin']} a formuluj to s nads√°zkou."
        f"Na ƒçtvrt√Ω ≈ô√°dek p≈ôidej odlehƒçenou zm√≠nku o zn√°m√Ωch nebo historick√Ωch nositel√≠ch tƒõchto jmen ‚Äì zmi≈à ≈æe se jedn√° o historick√° jm√©na."
        f"Na z√°vƒõr p≈ôidej v√Ωzvu k akci, nap≈ô. 'Tak co, zn√°te nƒõjak√©ho TY JMENA (ve 2. p√°dƒõ), tak ho oznaƒçte do koment√°≈ô≈Ø a pop≈ôejte jim/nebo mu pokud se jedna o jedno jmeno! üéÇ'. "
        f"Cel√Ω v√Ωstup pi≈° uvolnƒõnƒõ, s lehk√Ωm humorem, bohatƒõ pou≈æ√≠vej emojis a pi≈° jako popisek na soci√°ln√≠ s√≠tƒõ. Nep≈ôej konkr√©tn√≠m osob√°m, ale tƒõm jm√©n≈Øm samotn√Ωm. "
        f"Text mus√≠ b√Ωt poutav√Ω, z√°bavn√Ω, stylov√Ω ‚Äì ≈æ√°dn√° such√° fakta, ale lehk√° forma infotainmentu. "
    )

    ai_response = generate_with_gemini(prompt)
    if ai_response:
        print("‚úÖ [main] Vygenerovan√Ω AI popis:")
        print(ai_response)
    else:
        ai_response = "Dnes m√° sv√°tek " +{names}+"."
        print("‚ùå [main] Nepoda≈ôilo se vygenerovat AI popis. Pou≈æ√≠v√°m v√Ωchoz√≠ text.")
    description = ai_response+(f"\n\n\n."
                                  f"informace jsou z: czso.cz a nasejmena.cz\n"
                                  f"#DnesM√°Sv√°tek #Sv√°tekDnes #KdoM√°DnesSv√°tek #Sv√°teƒçn√≠Den #Jmeniny #Denn√≠Sv√°tek #Sv√°tekKa≈æd√ΩDen #ƒåesk√©Jmeniny #Sv√°tekVƒåesku #DnesSlav√≠ #Ka≈æd√ΩDen #Denn√≠Post #Zaj√≠mavosti #P≈ØvodJm√©na #Jm√©noDne #Jmenn√©Zaj√≠mavosti #PoznejJm√©na"
                                  f"#ƒçesk√Ωinstagram #postdne #inspirace #czsk #czechinstagram #dnes")
    print("üöÄ [main] Odes√≠l√°m toto album na Instagram:..")
    print("üì∑ [main] " + str(image_paths))
    post_album_to_instagram(image_paths, description)

    print("üîÑ [main] Kontroluji zda jsou tu obr√°zky star≈°√≠ 7 dn≈Ø pop≈ô√≠padƒõ je sma≈æu...")



if __name__ == "__main__":
    main()
    delete_old_png_files()
