from api_handler import generate_with_gemini
from instagram_bot import post_album_to_instagram
from name_info import get_todays_names, get_name_info, get_todays_holiday
from image_generator import generate_image_for, generate_nasa_image
import os
from datetime import datetime, timedelta


def delete_old_png_files():
    """
    Sma≈æe PNG soubory star≈°√≠ ne≈æ 7 dn√≠ ve form√°tu YYYY-MM-DD*.png
    - Proch√°z√≠ adres√°≈ô 'output/obrazky'
    - Hled√° soubory odpov√≠daj√≠c√≠ vzoru data
    - Ma≈æe ty, kter√© jsou star≈°√≠ ne≈æ 7 dn√≠
    """
    # Cesta k adres√°≈ôi s obr√°zky
    image_dir = os.path.join(os.path.dirname(os.path.abspath(__file__)), 'output')

    print(f"üîç [main_delete_old_png_files] Prohled√°v√°m adres√°≈ô: {image_dir}")

    # Vypoƒç√≠t√° datum p≈ôed 7 dny (hranice pro maz√°n√≠)
    seven_days_ago = datetime.now() - timedelta(days=7)
    print(f"‚è≥ [main_delete_old_png_files] Mazac√≠ hranice: soubory star≈°√≠ ne≈æ {seven_days_ago.date()}")

    # Kontrola existence adres√°≈ôe
    if not os.path.exists(image_dir):
        print(f"‚ö†Ô∏è [main_delete_old_png_files] Adres√°≈ô nenalezen! Ukonƒçuji funkci.")
        return

    file_count = 0
    deleted_count = 0

    # Proch√°z√≠ v≈°echny soubory v adres√°≈ôi
    for filename in os.listdir(image_dir):
        file_path = os.path.join(image_dir, filename)

        # P≈ôeskoƒç√≠ podadres√°≈ôe
        if os.path.isdir(file_path):
            print(f"üìÇ [main_delete_old_png_files] P≈ôeskoƒçen podadres√°≈ô: {filename}")
            continue

        file_count += 1

        # Zpracov√°v√° pouze PNG soubory
        if filename.lower().endswith('.png'):
            print(f"üñºÔ∏è [main_delete_old_png_files] Zpracov√°v√°m soubor: {filename}")

            try:
                # Pokus√≠ se z√≠skat datum z n√°zvu souboru (form√°t YYYY-MM-DD)
                date_str = filename[:10]  # Prvn√≠ch 10 znak≈Ø by mƒõlo b√Ωt datum

                file_date = datetime.strptime(date_str, "%Y-%m-%d").date()

                # Porovn√°n√≠ data - pokud je soubor star≈°√≠ ne≈æ 7 dn√≠, sma≈æe ho
                if file_date < seven_days_ago.date():
                    os.remove(file_path)
                    deleted_count += 1
                    print(f"üóëÔ∏è [main_delete_old_png_files] SMAZ√ÅNO: {filename} (datum: {file_date})")
                else:
                    print(f"üëç [main_delete_old_png_files] Zachov√°v√°m (je aktu√°ln√≠): {filename}")

            except ValueError:
                # P≈ôeskoƒç√≠ soubory, kter√© neodpov√≠daj√≠ form√°tu data
                print(f"‚ùì [main_delete_old_png_files] P≈ôeskoƒçeno - neplatn√Ω form√°t data: {filename}")
                continue
        else:
            print(f"‚è≠Ô∏è [main_delete_old_png_files] P≈ôeskoƒçeno - nen√≠ PNG: {filename}")

    # V√Ωpis statistik po dokonƒçen√≠
    print(f"üìä [main_delete_old_png_files] CELKEM: {file_count} soubor≈Ø prohled√°no")
    print(f"üìä [main_delete_old_png_files] SMAZ√ÅNO: {deleted_count} soubor≈Ø")
    print(f"üèÅ [main_delete_old_png_files] √öklid dokonƒçen!")


def main():
    """
    1) Naƒçte dne≈°n√≠ sv√°teƒçn√≠ jm√©na.
    2) Pokud nejsou jmeniny, zkontroluje sv√°tky.
    3) Pro ka≈æd√Ω p≈ô√≠pad vygeneruje p≈ô√≠slu≈°n√Ω obsah a obr√°zky.
    4) Nahraje obsah na Instagram.
    """
    print("üçÄ Naƒç√≠t√°m dne≈°n√≠ sv√°teƒçn√≠ jm√©na...")
    names = get_todays_names()
    image_paths = []

    if names:
        print("üé® Generuji obr√°zky pro jm√©na...")
        for name in names:
            info = get_name_info(name)
            img_path = generate_image_for(name, info)
            if img_path:
                image_paths.append(img_path)

        if not image_paths:
            print("‚ùå Nepoda≈ôilo se vygenerovat ≈æ√°dn√© obr√°zky pro jm√©na.")
            return

        info = get_name_info(names[0]) if names else None
        origin = info.get('origin') if info else 'neuvedeno'

        prompt = (
            f"Napi≈° kreativn√≠, vtipn√Ω a energick√Ω popisek na Instagram v ƒçe≈°tinƒõ, kter√Ω oslavuje sv√°tek tƒõchto jmen: {names}. "
            f"POZOR ‚Äì pokud je jm√©no jen jedno, pi≈° v√Ωhradnƒõ v jednotn√©m ƒç√≠sle ('Oslava sv√°tku pro Kvƒõtoslava je tady!'), "
            f"pokud je jmen v√≠c, pi≈° v mno≈æn√©m ƒç√≠sle ('Oslava sv√°tku pro Alexeje a Kvƒõtoslava je tady!'). "
            f"Zaƒçni hlavn√≠ vƒõtou stylu: üéâ Oslava sv√°tku pro {names} je tady! üéâ ‚Äì nebo podobnƒõ v√Ωraznou oslavnou vƒõtou s emojis. "
            f"Na druh√Ω ≈ô√°dek napi≈° odlehƒçen√© a z√°bavn√© p≈ô√°n√≠ tƒõmto jm√©n≈Øm. "
            f"Na t≈ôet√≠ ≈ô√°dek zakomponuj p≈Øvod jm√©na: {origin}, s nads√°zkou. "
            f"Na ƒçtvrt√Ω ≈ô√°dek vysvƒõtli v√Ωznam jm√©na a p≈ôidej vtipn√Ω koment√°≈ô. "
            f"Na p√°t√Ω ≈ô√°dek napi≈° 2‚Äì3 historick√© osobnosti s t√≠mto jm√©nem a jejich v√Ωznam. "
            f"Na z√°vƒõr v√Ωzva: 'Zn√°≈° nƒõjak√©ho {names}? Oznaƒç ho v koment√°≈ôi a pop≈ôej mu! üéÇ'. "
            f"Pi≈° v uvolnƒõn√©m, z√°bavn√©m a emoji-friendly stylu pro soci√°ln√≠ s√≠tƒõ."
        )
    else:
        print("‚ÑπÔ∏è ≈Ω√°dn√© jm√©no dnes neslav√≠. Kontroluji st√°tn√≠ sv√°tky...")
        holiday = get_todays_holiday()

        if not holiday:
            print("‚ùå Dnes nen√≠ ≈æ√°dn√Ω sv√°tek ani jmeniny.")
            return

        print(f"üé® Generuji obr√°zek pro sv√°tek: {holiday}")
        img_path = generate_image_for(holiday)
        if not img_path:
            print("‚ùå Nepoda≈ôilo se vygenerovat obr√°zek pro sv√°tek.")
            return
        image_paths.append(img_path)

        prompt = (
            f"Napi≈° kreativn√≠, vtipn√Ω, ale z√°rove≈à uctiv√Ω popisek na Instagram v ƒçe≈°tinƒõ, kter√Ω oslavuje v√Ωznamn√Ω den: {holiday}. "
            f"Zaƒçni oslavnou vƒõtou s emojis, nap≈ô. üéâ Dnes si p≈ôipom√≠n√°me {holiday}! üá®üáø ‚Äì udr≈æ t√≥n slavnostn√≠, ale svƒõ≈æ√≠. "
            f"Na druh√Ω ≈ô√°dek napi≈° odlehƒçen√© shrnut√≠, co tento den pro ƒåesko znamen√°. "
            f"Na t≈ôet√≠ ≈ô√°dek p≈ôidej zaj√≠mavou historickou souvislost. "
            f"Na ƒçtvrt√Ω ≈ô√°dek 2‚Äì3 osobnosti nebo symboly spojen√© s t√≠mto sv√°tkem. "
            f"Z√°vƒõrem v√Ωzvu k akci: 'Jak si p≈ôipom√≠n√°te {holiday} vy? ‚ú®'. "
            f"T√≥n: stylov√Ω, p≈ôirozen√Ω, soci√°lnƒõ-s√≠≈•ov√Ω. Emojis pou≈æ√≠vej st≈ô√≠dmƒõ."
        )

    # üß† Vygeneruj AI popis
    ai_response = generate_with_gemini(prompt)
    if not ai_response:
        ai_response = f"üéâ Dnes slav√≠me {' a '.join(names) if names else holiday}! üéâ\n\nP≈ôipojte se k oslav√°m tohoto v√Ωjimeƒçn√©ho dne!"
        print("‚ö†Ô∏è AI odpovƒõƒè nebyla dostupn√°. Pou≈æ√≠v√°m v√Ωchoz√≠ text.")

    # üì∏ P≈ôidej NASA obr√°zek
    nasa_path, nasa_explanation = generate_nasa_image()
    if nasa_path:
        image_paths.append(nasa_path)
        print("üåå NASA obr√°zek p≈ôid√°n do p≈ô√≠spƒõvku.")
        if nasa_explanation:
            print("üåç P≈ôekl√°d√°m popis NASA obr√°zku...")
            translated = generate_with_gemini("P≈ôelo≈æ n√°sleduj√≠c√≠ text z angliƒçtiny do ƒçe≈°tiny a uprav jej jako struƒçn√Ω instagramov√Ω popisek."
                                                "Zachovej pouze informativn√≠ obsah, odstra≈à pozv√°nky na akce nebo osobn√≠ osloven√≠."
                                                "Text mus√≠ b√Ωt p≈ôirozen√Ω, vƒõcn√Ω a vhodn√Ω pro ƒçesk√© publikum a nesm√≠ obsahovat ≈æ√°dn√© form√°tovac√≠ symboly (hvƒõzdiƒçky, hashtagy, pomlƒçky na zaƒç√°tku ≈ô√°dku apod.). Pouze ƒçist√Ω text."

                                                "P≈ô√≠klad spr√°vn√©ho v√Ωstupu:"
                                                "Co je to za neobvyklou skvrnu na Mƒõs√≠ci? Je to Mezin√°rodn√≠ vesm√≠rn√° stanice (ISS)."
                                                "Tento sn√≠mek zachycuje ISS p≈ôi p≈ôechodu p≈ôed Mƒõs√≠cem v roce 2019."
                                                "Expozice byla pouh√Ωch 1/667 sekundy, zat√≠mco cel√Ω p≈ôechod trval asi p≈Øl sekundy."
                                                "Na detailn√≠m sn√≠mku jsou vidƒõt sol√°rn√≠ panely a konstrukce stanice."
                                                "Vlevo dole je kr√°ter Tycho a mƒõs√≠ƒçn√≠ mo≈ôe (tmav√© oblasti) a pevniny (svƒõtl√© oblasti)"
                                                
                                                "Text ke zpracov√°n√≠:"
                                                f"{nasa_explanation}")
            if translated:
                ai_response += f"\nüì∑ Fotka z vesm√≠ru:\n{translated}"

    # üìù P≈ôiprav fin√°ln√≠ popis
    sources =("\nInformace jsou z: czso.cz a nasejmena.cz \nZdroj obr√°zku: NASA Astronomy Picture of the Day (APOD)")
    hashtags = (
        "\n\n#DnesMaSvatek #SvatekDnes #SvatekKazdyDen "
        "#CeskeJmeniny #Svatky #PoznejSvatky #DnesSlavi"
    )
    description = ai_response + sources + hashtags

    # üì§ Odesl√°n√≠ na Instagram
    print("üöÄ Publikuji p≈ô√≠spƒõvek na Instagram...")
    post_album_to_instagram(image_paths, description)






if __name__ == "__main__":
    main()
    print("üîÑ [main] Kontroluji zda jsou tu obr√°zky star≈°√≠ 7 dn≈Ø pop≈ô√≠padƒõ je sma≈æu...")
    delete_old_png_files()
