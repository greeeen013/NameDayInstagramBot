from api_handler import generate_with_deepseek, get_todays_international_days
from instagram_bot import post_album_to_instagram
from name_info import get_name_details, get_today_names_and_holidays, letter_map
from image_generator import generate_image_for, generate_nasa_image, generate_international_day_image
import os
from datetime import datetime, timedelta


def generate_prompt(is_holiday: bool, name_or_holiday: str, info: dict = None) -> str:
    """Generuje jednotliv√Ω prompt pro jedno jm√©no nebo sv√°tek"""
    if is_holiday:
        holiday = name_or_holiday
        prompt = (
            f"Napi≈° kreativn√≠, vtipn√Ω, ale z√°rove≈à uctiv√Ω instagramov√Ω popisek v ƒçe≈°tinƒõ k oslavƒõ dne {holiday}.\n"
            "Nepou≈æ√≠vej ≈æ√°dn√Ω # ani _ ani * ani slov√≠ƒçka z jin√Ωch jazyk≈Ø\n"
            "Popisek bude tvo≈ôen jedn√≠m odstavcem o 3‚Äì4 vƒõt√°ch, kter√Ω p≈ôedstav√≠ tento sv√°tek.\n"
            f"Zaƒçni radostn√Ωm zvol√°n√≠m s emoji, ≈æe dnes je {holiday}.\n"
            "D√°le struƒçnƒõ uveƒè, co tento den pro ƒåesko znamen√° nebo co p≈ôipom√≠n√°.\n"
            "P≈ôidej tak√© nƒõjakou zaj√≠mavost nebo vtipn√Ω fakt o tomto sv√°tku.\n"
            "T√≥n popisku bude vesel√Ω a slavnostn√≠, ale z√°rove≈à respektuj√≠c√≠ v√Ωznam dne."
        )
        return prompt
    else:
        name = name_or_holiday
        origin = info.get("origin", "nezn√°m√Ω") if info else "nezn√°m√Ω"
        meaning = info.get("meaning", "neuveden") if info else "neuveden"
        prompt = (
            f"Zde jsou informace o jm√©nu {name}: P≈Øvod: {origin}; V√Ωznam: {meaning}.\n"
            f"Napi≈° kreativn√≠, vtipn√Ω, ale z√°rove≈à uctiv√Ω instagramov√Ω popisek v ƒçe≈°tinƒõ k oslavƒõ jmenin jm√©na {name}.\n"
            "Nepou≈æ√≠vej ≈æ√°dn√Ω # ani _ ani * ani anglick√° slov√≠ƒçka\n"
            "Popisek bude jeden odstavec o ƒçty≈ôech vƒõt√°ch.\n"
            f"V prvn√≠ vƒõtƒõ oslov p≈ô√≠mo {name} a pop≈ôej mu/j√≠ k sv√°tku (pou≈æij humor a emoji).\n"
            f"Druh√° vƒõta zm√≠n√≠ p≈Øvod jm√©na (vyu≈æij informaci, ≈æe p≈Øvod je {origin}).\n"
            f"T≈ôet√≠ vƒõta zm√≠n√≠ v√Ωznam jm√©na (vyu≈æij informaci, ≈æe v√Ωznam je {meaning}).\n"
            #f"ƒåtvrt√° vƒõta p≈ôipomene nƒõjakou zn√°mou osobnost nebo zaj√≠mavost spojenou se jm√©nem {name}.\n"
            "T√≥n popisku bude vesel√Ω a p≈ô√°telsk√Ω, ale s respektem. Pozor na spr√°vn√© sklo≈àov√°n√≠ (vokativ) jm√©na a pou≈æit√≠ spr√°vn√©ho rodu."
        )
        return prompt


def generate_all_prompts(names: list, holidays: list, names_info: list = None) -> str:
    """
    Zpracuje v≈°echny p≈ô√≠pady (jm√©na/sv√°tky) a vr√°t√≠ fin√°ln√≠ text pro Instagram
    1. Pokud je sv√°tek - vr√°t√≠ jeden text o sv√°tku
    2. Pokud jsou jm√©na - vr√°t√≠ texty o jednotliv√Ωch jm√©nech oddƒõlen√© ---
    """
    final_text = ""

    # P≈ôid√°n√≠ √∫vodn√≠ho ≈ô√°dku s jm√©ny/sv√°tky
    if names:
        if len(names) == 1:
            intro = f"üéâ Dnes sv√°tek slav√≠ {names[0]}! üéâ"
        else:
            # Spojen√≠ jmen s ƒç√°rkami a "a" p≈ôed posledn√≠m jm√©nem
            names_str = ", ".join(names[:-1]) + " a " + names[-1]
            intro = f"üéâ Dnes sv√°tek slav√≠ {names_str}! üéâ"
        final_text += f"{intro}\n\n"

    if holidays:
        # Zpracov√°n√≠ sv√°tk≈Ø
        for holiday in holidays:
            prompt = generate_prompt(is_holiday=True, name_or_holiday=holiday)
            response = generate_with_deepseek(prompt)
            if response:
                final_text += f"{response}\n\n"

    if names:
        # Zpracov√°n√≠ jmen
        for i, (name, info) in enumerate(zip(names, names_info or [])):
            prompt = generate_prompt(is_holiday=False, name_or_holiday=name, info=info)
            response = generate_with_deepseek(prompt)
            if response:
                final_text += f"{response}\n\n"

    return final_text.strip()


def delete_old_png_files():
    """
    Sma≈æe PNG soubory star≈°√≠ ne≈æ 7 dn√≠ ve form√°tu YYYY-MM-DD*.png
    - Proch√°z√≠ adres√°≈ô 'output/obrazky'
    - Hled√° soubory odpov√≠daj√≠c√≠ vzoru data
    - Ma≈æe ty, kter√© jsou star≈°√≠ ne≈æ 7 dn√≠
    """
    # Cesta k adres√°≈ôi s obr√°zky
    image_dir = os.path.join(os.path.dirname(os.path.abspath(__file__)), 'output')
    print(f"üîç [main_delete_old_png_files] Prohled√°v√°m adres√°≈ô: {image_dir}")

    # Vypoƒç√≠t√° datum p≈ôed 7 dny (hranice pro maz√°n√≠)
    seven_days_ago = datetime.now() - timedelta(days=7)
    print(f"‚è≥ [main_delete_old_png_files] Mazac√≠ hranice: soubory star≈°√≠ ne≈æ {seven_days_ago.date()}")

    # Kontrola existence adres√°≈ôe
    if not os.path.exists(image_dir):
        print(f"‚ö†Ô∏è [main_delete_old_png_files] Adres√°≈ô nenalezen! Ukonƒçuji funkci.")
        return

    file_count = 0
    deleted_count = 0

    # Proch√°z√≠ v≈°echny soubory v adres√°≈ôi
    for filename in os.listdir(image_dir):
        file_path = os.path.join(image_dir, filename)

        # P≈ôeskoƒç√≠ podadres√°≈ôe
        if os.path.isdir(file_path):
            print(f"üìÇ [main_delete_old_png_files] P≈ôeskoƒçen podadres√°≈ô: {filename}")
            continue

        file_count += 1

        # Zpracov√°v√° pouze PNG soubory
        if filename.lower().endswith('.png'):
            print(f"üñºÔ∏è [main_delete_old_png_files] Zpracov√°v√°m soubor: {filename}")

            try:
                # Pokus√≠ se z√≠skat datum z n√°zvu souboru (form√°t YYYY-MM-DD)
                date_str = filename[:10]  # Prvn√≠ch 10 znak≈Ø by mƒõlo b√Ωt datum

                file_date = datetime.strptime(date_str, "%Y-%m-%d").date()

                # Porovn√°n√≠ data - pokud je soubor star≈°√≠ ne≈æ 7 dn√≠, sma≈æe ho
                if file_date < seven_days_ago.date():
                    os.remove(file_path)
                    deleted_count += 1
                    print(f"üóëÔ∏è [main_delete_old_png_files] SMAZ√ÅNO: {filename} (datum: {file_date})")
                else:
                    print(f"üëç [main_delete_old_png_files] Zachov√°v√°m (je aktu√°ln√≠): {filename}")

            except ValueError:
                # P≈ôeskoƒç√≠ soubory, kter√© neodpov√≠daj√≠ form√°tu data
                print(f"‚ùì [main_delete_old_png_files] P≈ôeskoƒçeno - neplatn√Ω form√°t data: {filename}")
                continue
        else:
            print(f"‚è≠Ô∏è [main_delete_old_png_files] P≈ôeskoƒçeno - nen√≠ PNG: {filename}")

    # V√Ωpis statistik po dokonƒçen√≠
    print(f"üìä [main_delete_old_png_files] CELKEM: {file_count} soubor≈Ø prohled√°no")
    print(f"üìä [main_delete_old_png_files] SMAZ√ÅNO: {deleted_count} soubor≈Ø")
    print(f"üèÅ [main_delete_old_png_files] √öklid dokonƒçen!")


def main():
    """
    1) Naƒçte dne≈°n√≠ sv√°teƒçn√≠ jm√©na.
    2) Pokud nejsou jmeniny, zkontroluje sv√°tky.
    3) Pro ka≈æd√Ω p≈ô√≠pad vygeneruje p≈ô√≠slu≈°n√Ω obsah a obr√°zky.
    4) Nahraje obsah na Instagram.
    """
    print("üçÄ Naƒç√≠t√°m dne≈°n√≠ sv√°teƒçn√≠ jm√©na...")
    names, holidays = get_today_names_and_holidays()
    image_paths = []
    names_info = []

    # Speci√°ln√≠ p≈ô√≠pad - Cyril a Metodƒõj
    if holidays == ['Den vƒõrozvƒõst≈Ø Cyrila a Metodƒõje']:
        print("üéâ Dnes slav√≠ sv√°tek Cyril a Metodƒõj!")
        names = ["Cyril", "Metodƒõj"]

        # Generov√°n√≠ obr√°zk≈Ø
        holiday_img = generate_image_for(holidays[0])
        if holiday_img:
            image_paths.append(holiday_img)

        for name in names:
            try:
                info = get_name_details(name, letter_map)
            except Exception as e:
                print(f"‚ö†Ô∏è Chyba p≈ôi z√≠sk√°v√°n√≠ statistik: {e}")
                info = None

            if info:
                names_info.append(info)
                img_path = generate_image_for(name, info)
            else:
                # Fallback bez statistik
                img_path = generate_image_for(name)
                names_info.append({})

            if img_path:
                image_paths.append(img_path)

    # Norm√°ln√≠ p≈ô√≠pad - jm√©na
    elif names:
        print("üé® Generuji obr√°zky pro jm√©na...")
        for name in names:
            try:
                info = get_name_details(name, letter_map)
            except Exception as e:
                print(f"‚ö†Ô∏è Chyba p≈ôi z√≠sk√°v√°n√≠ statistik: {e}")
                info = None

            if info:
                names_info.append(info)
                img_path = generate_image_for(name, info)
            else:
                # Fallback bez statistik
                img_path = generate_image_for(name)
                names_info.append({})

            if img_path:
                image_paths.append(img_path)

    # Pouze sv√°tek
    elif holidays:
        print("‚ÑπÔ∏è ≈Ω√°dn√© jm√©no dnes neslav√≠. Kontroluji st√°tn√≠ sv√°tky...")
        holiday = holidays[0]
        print(f"üé® Generuji obr√°zek pro sv√°tek: {holiday}")
        img_path = generate_image_for(holiday)
        if img_path:
            image_paths.append(img_path)

    else:
        print("‚ùå Dnes nen√≠ ≈æ√°dn√Ω sv√°tek ani jmeniny.")
        return

    international_days = get_todays_international_days()

    if international_days:
        for day_name in international_days:
            image_paths.append(generate_international_day_image(day_name))
            # ... pokraƒçuj v postov√°n√≠ obr√°zku
    else:
        print("Dnes nen√≠ ≈æ√°dn√Ω mezin√°rodn√≠ den. Pou≈æ√≠v√°m standardn√≠ obr√°zek.")

    # Generov√°n√≠ textu
    ai_response = generate_all_prompts(names, holidays, names_info)
    if not ai_response:
        ai_response = f"üéâ Dnes slav√≠me {' a '.join(names) if names else holidays[0]}! üéâ\n\nP≈ôipojte se k oslav√°m tohoto v√Ωjimeƒçn√©ho dne!"
        print("‚ö†Ô∏è AI odpovƒõƒè nebyla dostupn√°. Pou≈æ√≠v√°m v√Ωchoz√≠ text.")

    # P≈ôid√°n√≠ NASA obr√°zku
    nasa_path, nasa_explanation = generate_nasa_image()
    if nasa_path:
        image_paths.append(nasa_path)
        if nasa_explanation:
            translated = generate_with_deepseek(
                "P≈ôelo≈æ n√°sleduj√≠c√≠ text z angliƒçtiny do ƒçe≈°tiny a uprav jej jako struƒçn√Ω instagramov√Ω popisek, klidnƒõ pou≈æij emoji ale nepou≈æ√≠vej ≈æ√°dn√Ω # ani _ ani *.\n"
                f"Text ke zpracov√°n√≠:\n{nasa_explanation}"
            )
            if translated:
                ai_response += f"\n\nüì∑ Fotka vesm√≠ru:\n{translated}"

    # Fin√°ln√≠ popis
    sources = "\n\nKdo m√° sv√°tek je z: kalendar.beda.cz \nStatistiky jsou z: nasejmena.cz \nZdroj obr√°zku: NASA Astronomy Picture of the Day (APOD)"
    hashtags = "\n\n#DnesMaSvatek #SvatekDnes #SvatekKazdyDen #CeskeJmeniny #Svatky #PoznejSvatky #DnesSlavi"
    description = ai_response + sources + hashtags

    # Odesl√°n√≠ na Instagram
    print("üöÄ Publikuji p≈ô√≠spƒõvek na Instagram...")
    post_album_to_instagram(image_paths, description)


if __name__ == "__main__":
    main()
    print("üîÑ [main] Kontroluji zda jsou tu obr√°zky star≈°√≠ 7 dn≈Ø pop≈ô√≠padƒõ je sma≈æu...")
    delete_old_png_files()